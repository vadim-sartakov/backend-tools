{"version":3,"sources":["../../src/model/MongooseCrudModel.js"],"names":["defaultPermissions","create","read","update","delete","MongooseCrudModel","Model","opts","excerptProjection","populate","search","queryFilter","permissionFilter","Array","isArray","map","searchField","RegExp","Object","assign","$or","filterArray","push","resultFilter","length","$and","permissions","page","size","filter","sort","permissionProjection","projection","getAllQuery","find","skip","limit","select","getResultFilter","where","applyPopulateIfRequired","setOptions","lean","exec","query","keys","forEach","path","countQuery","count","payload","doc","save","saved","toObject","convertFitlerId","findOne","result","id","_id","initialObject","findOneAndUpdate","new","updated","findOneAndDelete","deleted"],"mappings":"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","file":"MongooseCrudModel.js","sourcesContent":["import { filterObject } from \"shared-tools\";\r\n\r\nconst defaultPermissions = { create: { }, read: { }, update: { }, delete: { } };\r\n\r\nclass MongooseCrudModel {\r\n\r\n    constructor(Model, opts = {}) {\r\n        const { excerptProjection, populate, search } = opts;\r\n        this.Model = Model;\r\n        this.excerptProjection = excerptProjection;\r\n        this.populate = populate;\r\n        this.search = search;\r\n    }\r\n\r\n    getResultFilter(queryFilter, permissionFilter) {\r\n        if (queryFilter && queryFilter.search && this.search) {\r\n            let search = Array.isArray(this.search) ? this.search : [this.search];\r\n            search = search.map(searchField => {\r\n                return { [searchField]: new RegExp(`.*${queryFilter.search}.*`, 'i') };\r\n            });\r\n            delete queryFilter.search;\r\n            Object.assign(queryFilter, { $or: [...search] });\r\n        }\r\n        const filterArray = [];\r\n        if (permissionFilter) filterArray.push(permissionFilter);\r\n        if (queryFilter) filterArray.push(queryFilter);\r\n        let resultFilter;\r\n        switch(filterArray.length) {\r\n            case 1:\r\n                resultFilter = filterArray[0];\r\n                break;\r\n            case 2:\r\n                resultFilter = { $and: filterArray };\r\n                break;\r\n            default:\r\n        }\r\n        return resultFilter;\r\n    }\r\n\r\n    async getAll({ page, size, filter, sort }, permissions) {\r\n        permissions = { ...defaultPermissions, ...permissions };\r\n        const { read: { filter: permissionFilter, projection: permissionProjection } } = permissions;\r\n        const getAllQuery = this.Model.find()\r\n            .skip(page * size)\r\n            .limit(size);\r\n        const projection = this.excerptProjection || permissionProjection;\r\n        if (projection) getAllQuery.select(projection);\r\n        const resultFilter = this.getResultFilter(filter, permissionFilter);\r\n        if (resultFilter) getAllQuery.where(resultFilter);\r\n        if (sort) getAllQuery.sort(sort);\r\n        this.applyPopulateIfRequired(getAllQuery);\r\n        getAllQuery.setOptions({ lean: true });\r\n        return await getAllQuery.exec();\r\n    }\r\n\r\n    applyPopulateIfRequired(query) {\r\n        if (this.populate) Object.keys(this.populate).forEach(path => query.populate({ path, select: this.populate[path] }));\r\n    }\r\n\r\n    async count(filter, permissions) {\r\n        permissions = { ...defaultPermissions, ...permissions };\r\n        const { read: { filter: permissionFilter } } = permissions;\r\n        const countQuery = this.Model.count();\r\n        const resultFilter = this.getResultFilter(filter, permissionFilter);\r\n        if (resultFilter) countQuery.where(resultFilter);\r\n        return await countQuery.exec();\r\n    }\r\n\r\n    async addOne(payload, permissions) {\r\n        permissions = { ...defaultPermissions, ...permissions };\r\n        const { update: { projection } } = permissions;\r\n        if (projection) payload = filterObject(payload, projection);\r\n        const doc = new this.Model(payload);\r\n        let saved = await doc.save();\r\n        return saved.toObject();\r\n    }\r\n\r\n    async getOne(filter, permissions) {\r\n        filter = this.convertFitlerId(filter);\r\n        permissions = { ...defaultPermissions, ...permissions };\r\n        const { read: { filter: permissionFilter, projection } } = permissions;\r\n        const resultFilter = this.getResultFilter(filter, permissionFilter);\r\n        const query = this.Model.findOne(resultFilter);\r\n        if (projection) query.select(projection);\r\n        this.applyPopulateIfRequired(query);\r\n        query.setOptions({ lean: true });\r\n        return await query.exec();\r\n    }\r\n\r\n    convertFitlerId(filter) {\r\n        let result;\r\n        if (filter && filter.id) {\r\n            result = { ...filter };\r\n            result._id = result.id;\r\n            delete result.id;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    async updateOne(filter, payload, permissions) {\r\n        filter = this.convertFitlerId(filter);\r\n        permissions = { ...defaultPermissions, ...permissions };\r\n        const { read: { filter: permissionFilter }, update: { projection } } = permissions;\r\n        const resultFilter = this.getResultFilter(filter, permissionFilter);\r\n        if (projection) {\r\n            const initialObject = await this.Model.findOne(resultFilter).lean();\r\n            payload = filterObject(payload, projection, initialObject);\r\n        }\r\n        const updated = await this.Model.findOneAndUpdate(resultFilter, payload, { new: true, lean: true });\r\n        return updated;\r\n    }\r\n\r\n    async deleteOne(filter, permissions) {\r\n        filter = this.convertFitlerId(filter);\r\n        permissions = { ...defaultPermissions, ...permissions };\r\n        const { read: { filter: permissionFilter } } = permissions;\r\n        const resultFilter = this.getResultFilter(filter, permissionFilter);\r\n        let deleted = await this.Model.findOneAndDelete(resultFilter).lean();\r\n        return deleted;\r\n    }\r\n\r\n}\r\n\r\nexport default MongooseCrudModel;"]}