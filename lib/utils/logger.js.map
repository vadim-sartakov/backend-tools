{"version":3,"sources":["../../src/utils/logger.js"],"names":["logDirectory","process","env","LOG_PATH","createLogger","fs","existsSync","mkdirSync","winston","format","combine","label","colorize","timestamp","splat","printf","custom","info","level","message","labelName","transports","Console","FileTransport","File","filename","maxsize","maxFiles","push","debug","logger","enabled"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMA,sCAAeC,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,OAA7C;;AAEA,IAAMC,sCAAe,SAAfA,YAAe,YAAa;;AAErC,QAAI,CAACC,aAAGC,UAAH,CAAcN,YAAd,CAAL,EAAkC;AAC9BK,qBAAGE,SAAH,CAAaP,YAAb;AACH;;AAJoC,0BAM0BQ,kBAAQC,MANlC;AAAA,QAM7BC,OAN6B,mBAM7BA,OAN6B;AAAA,QAMpBC,KANoB,mBAMpBA,KANoB;AAAA,QAMbC,QANa,mBAMbA,QANa;AAAA,QAMHC,SANG,mBAMHA,SANG;AAAA,QAMQC,KANR,mBAMQA,KANR;AAAA,QAMeC,MANf,mBAMeA,MANf;;AAOrC,QAAMC,SAASD,OAAO;AAAA,eAAWE,KAAKJ,SAAhB,SAA6BI,KAAKC,KAAlC,UAA4CD,KAAKN,KAAjD,WAA4DM,KAAKE,OAAjE;AAAA,KAAP,CAAf;;AAEA,QAAMV,SAASC,QAAQC,MAAM,EAAEA,OAAOS,SAAT,EAAN,CAAR,EAAqCP,WAArC,EAAkDC,OAAlD,EAA2DE,MAA3D,CAAf;AACA,QAAMK,aAAa,CAAE,IAAIb,kBAAQa,UAAR,CAAmBC,OAAvB,CAA+B;AAChDb,gBAAQC,QAAQE,UAAR,EAAoBH,MAApB;AADwC,KAA/B,CAAF,CAAnB;;AAIA,QAAMc,gBAAgB,IAAIf,kBAAQa,UAAR,CAAmBG,IAAvB,CAA4B;AAC9CC,kBAAazB,YAAb,aAD8C;AAE9C0B,iBAAS,OAAO,IAAP,GAAc,EAFuB;AAG9CC,kBAAU,EAHoC;AAI9ClB;AAJ8C,KAA5B,CAAtB;AAMAY,eAAWO,IAAX,CAAgBL,aAAhB;;AAEA,QAAMM,QAAQ,qBAAYT,SAAZ,CAAd;AACA,QAAMU,SAAStB,kBAAQJ,YAAR,CAAqB;AAChCc,eAAQW,MAAME,OAAN,IAAiB,OAAlB,IAA8B,MADL;AAEhCV;AAFgC,KAArB,CAAf;;AAKA,WAAOS,MAAP;AAEH,CA9BM;;kBAgCQ1B,Y","file":"logger.js","sourcesContent":["import fs from 'fs';\r\nimport createDebug from 'debug';\r\nimport winston from 'winston';\r\n\r\nexport const logDirectory = process.env.LOG_PATH || \"./log\";\r\n\r\nexport const createLogger = labelName => {\r\n    \r\n    if (!fs.existsSync(logDirectory)) {\r\n        fs.mkdirSync(logDirectory);\r\n    }\r\n\r\n    const { combine, label, colorize, timestamp, splat, printf } = winston.format;\r\n    const custom = printf(info => `${info.timestamp} ${info.level} [${info.label}]: ${info.message}`);\r\n\r\n    const format = combine(label({ label: labelName }), timestamp(), splat(), custom);\r\n    const transports = [ new winston.transports.Console({\r\n        format: combine(colorize(), format)\r\n    }) ];\r\n\r\n    const FileTransport = new winston.transports.File({\r\n        filename: `${logDirectory}/app.log`,\r\n        maxsize: 1024 * 1024 * 10,\r\n        maxFiles: 10,\r\n        format\r\n    });\r\n    transports.push(FileTransport);\r\n\r\n    const debug = createDebug(labelName);\r\n    const logger = winston.createLogger({\r\n        level: (debug.enabled && \"debug\") || \"info\",\r\n        transports\r\n    });\r\n\r\n    return logger;\r\n\r\n};\r\n\r\nexport default createLogger;"]}