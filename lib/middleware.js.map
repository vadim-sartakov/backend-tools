{"version":3,"sources":["../src/middleware.js"],"names":["commonMiddlewares","bodyParser","urlencoded","extended","json","notFound","req","res","logger","warn","ip","originalUrl","status","send","message","internalError","err","next","error","stack","security","schema","user","locals","permissions","method","create","read","update","delete","validator","errors","body","constraints","unauthorized"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAGO,IAAMA,gDAAoB,CAC7B,uBAD6B,EAE7B,6BAF6B,EAG7BC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAH6B,EAI7BF,qBAAWG,IAAX,EAJ6B,CAA1B;;AAOA,IAAMC,8BAAW,SAAXA,QAAW;AAAA,WAAU,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5CC,kBAAUA,OAAOC,IAAP,CAAY,sCAAZ,EAAoDH,IAAII,EAAxD,EAA4DJ,IAAIK,WAAhE,CAAV;AACAJ,YAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,WAAX,EAArB;AACH,KAHuB;AAAA,CAAjB;;AAKA,IAAMC,wCAAgB,SAAhBA,aAAgB;AAAA,WAAU,UAACC,GAAD,EAAMV,GAAN,EAAWC,GAAX,EAAgBU,IAAhB,EAAyB;AAAE;AAC9DT,kBAAUA,OAAOU,KAAP,CAAa,QAAb,EAAuBF,IAAIF,OAA3B,EAAoCE,IAAIG,KAAxC,CAAV;AACAZ,YAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,uBAAX,EAArB;AACH,KAH4B;AAAA,CAAtB;;AAKP;;;;;AAKO,IAAMM,8BAAW,SAAXA,QAAW,CAACC,MAAD,EAASb,MAAT;AAAA,WAAoB,UAACF,GAAD,EAAMC,GAAN,EAAWU,IAAX,EAAoB;AAAA,YACpDK,IADoD,GAC3Cf,IAAIgB,MADuC,CACpDD,IADoD;;AAE5D,YAAME,cAAc,iCAChBF,IADgB,EAEhBD,MAFgB,EAGhB,QAHgB,EAIhB,MAJgB,EAKhB,QALgB,EAMhB,QANgB,CAApB;AAF4D,YAUpDI,MAVoD,GAUzCnB,GAVyC,CAUpDmB,MAVoD;;AAW5D,YAAMA,WAAW,MAAX,IAAqB,CAACD,YAAYE,MAApC,IACMD,WAAW,KAAX,IAAoB,CAACD,YAAYG,IADvC,IAEMF,WAAW,KAAX,IAAoB,CAACD,YAAYI,MAFvC,IAGMH,WAAW,QAAX,IAAuB,CAACD,YAAYK,MAH9C,EAGwD;AACpDtB,gBAAIK,MAAJ,CAAW,GAAX;AACAL,gBAAIH,IAAJ,CAAS,EAAEU,SAAS,kBAAX,EAAT;AACAN,sBAAUA,OAAOC,IAAP,CAAY,4BAAZ,EAA0CH,IAAII,EAA9C,EAAkDJ,IAAIK,WAAtD,CAAV;AACA;AACH;AACDJ,YAAIgB,MAAJ,CAAWC,WAAX,GAAyBA,WAAzB;AACAP;AACH,KAtBuB;AAAA,CAAjB;;AAwBA,IAAMa,gCAAY,SAAZA,SAAY;AAAA,WAAe,UAACxB,GAAD,EAAMC,GAAN,EAAWU,IAAX,EAAoB;AACxD,YAAMc,SAAS,2BAASzB,IAAI0B,IAAb,EAAmBC,WAAnB,CAAf;AACA,YAAIF,MAAJ,EAAY;AACRxB,gBAAIK,MAAJ,CAAW,GAAX;AACA,mBAAOL,IAAIH,IAAJ,CAAS,EAAEU,SAAS,mBAAX,EAAgCiB,cAAhC,EAAT,CAAP;AACH;AACDd;AACH,KAPwB;AAAA,CAAlB;;AASA,IAAMiB,sCAAe,SAAfA,YAAe;AAAA,WAAU,UAAC5B,GAAD,EAAMC,GAAN,EAAWU,IAAX,EAAoB;AACtD,YAAIV,IAAIgB,MAAJ,CAAWD,IAAf,EAAqB,OAAOL,MAAP;AACrBT,kBAAUA,OAAOC,IAAP,CAAY,mCAAZ,EAAiDH,IAAII,EAArD,EAAyDJ,IAAIK,WAA7D,CAAV;AACAJ,YAAIK,MAAJ,CAAW,GAAX;AACAL,YAAIH,IAAJ,CAAS,EAAEU,SAAS,aAAX,EAAT;AACH,KAL2B;AAAA,CAArB","file":"middleware.js","sourcesContent":["import helmet from \"helmet\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport bodyParser from \"body-parser\";\r\nimport { validate } from \"shared-tools\";\r\nimport { getPermissions } from \"shared-tools\";\r\n\r\nexport const commonMiddlewares = [\r\n    helmet(),\r\n    cookieParser(),\r\n    bodyParser.urlencoded({ extended: true }),\r\n    bodyParser.json()\r\n];\r\n\r\nexport const notFound = logger => (req, res) => {\r\n    logger && logger.warn(\"%s requested non-existed resource %s\", req.ip, req.originalUrl);\r\n    res.status(404).send({ message: \"Not found\" });\r\n};\r\n\r\nexport const internalError = logger => (err, req, res, next) => { // eslint-disable-line no-unused-vars\r\n    logger && logger.error(\"%s\\n%s\", err.message, err.stack);\r\n    res.status(500).send({ message: \"Internal server error\" });\r\n};\r\n\r\n/**\r\n * Checks current user sotred in \"user.local\" against security schema.\r\n * Resulted filter stored in \"res.locals.permissions\" parameter\r\n * @param {Object} schema\r\n */\r\nexport const security = (schema, logger) => (req, res, next) => {\r\n    const { user } = res.locals;\r\n    const permissions = getPermissions(\r\n        user,\r\n        schema,\r\n        \"create\",\r\n        \"read\",\r\n        \"update\",\r\n        \"delete\"\r\n    );\r\n    const { method } = req;\r\n    if (( method === \"POST\" && !permissions.create ) ||\r\n            ( method === \"GET\" && !permissions.read ) ||\r\n            ( method === \"PUT\" && !permissions.update ) ||\r\n            ( method === \"DELETE\" && !permissions.delete )) {\r\n        res.status(403);\r\n        res.json({ message: \"Access is denied\" });\r\n        logger && logger.warn(\"Access denied for %s to %s\", req.ip, req.originalUrl);\r\n        return;\r\n    }\r\n    res.locals.permissions = permissions;\r\n    next();\r\n};\r\n\r\nexport const validator = constraints => (req, res, next) => {\r\n    const errors = validate(req.body, constraints);\r\n    if (errors) {\r\n        res.status(400);\r\n        return res.json({ message: \"Validation failed\", errors });\r\n    }\r\n    next();\r\n};\r\n\r\nexport const unauthorized = logger => (req, res, next) => {\r\n    if (res.locals.user) return next();\r\n    logger && logger.warn(\"Unauthorized access from %s to %s\", req.ip, req.originalUrl);\r\n    res.status(401);\r\n    res.json({ message: \"Unathorized\" });\r\n};"]}