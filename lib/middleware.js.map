{"version":3,"sources":["../src/middleware.js"],"names":["commonMiddlewares","bodyParser","urlencoded","extended","json","notFound","debug","req","res","ip","originalUrl","status","send","message","internalError","err","next","stack","security","schema","logger","user","locals","permissions","method","create","read","update","delete","warn","validator","errors","body","constraints","unauthorized"],"mappings":"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","file":"middleware.js","sourcesContent":["import helmet from \"helmet\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport bodyParser from \"body-parser\";\r\nimport createDebug from \"debug\";\r\nimport { validate } from \"shared-tools\";\r\nimport { getPermissions } from \"shared-tools\";\r\n\r\nexport const commonMiddlewares = [\r\n    helmet(),\r\n    cookieParser(),\r\n    bodyParser.urlencoded({ extended: true }),\r\n    bodyParser.json()\r\n];\r\n\r\nexport const notFound = () => {\r\n    const debug = createDebug(\"middleware:notFound\");\r\n    return (req, res) => {\r\n        debug(\"%s requested non-existed resource %s\", req.ip, req.originalUrl);\r\n        res.status(404).send({ message: \"Not found\" });\r\n    };\r\n};\r\n\r\nexport const internalError = () => {\r\n    const debug = createDebug(\"middleware:internalError\");\r\n    return (err, req, res, next) => { // eslint-disable-line no-unused-vars\r\n        debug(\"%s\\n%s\", err.message, err.stack);\r\n        res.status(500).send({ message: \"Internal server error\" });\r\n    };\r\n};\r\n\r\n/**\r\n * Checks current user sotred in \"user.local\" against security schema.\r\n * Resulted filter stored in \"res.locals.permissions\" parameter\r\n * @param {Object} schema\r\n */\r\nexport const security = (schema, logger) => (req, res, next) => {\r\n    const { user } = res.locals;\r\n    const permissions = getPermissions(\r\n        user,\r\n        schema,\r\n        \"create\",\r\n        \"read\",\r\n        \"update\",\r\n        \"delete\"\r\n    );\r\n    const { method } = req;\r\n    if (( method === \"POST\" && !permissions.create ) ||\r\n            ( method === \"GET\" && !permissions.read ) ||\r\n            ( method === \"PUT\" && !permissions.update ) ||\r\n            ( method === \"DELETE\" && !permissions.delete )) {\r\n        res.status(403);\r\n        res.json({ message: \"Access is denied\" });\r\n        logger && logger.warn(\"Access denied for %s to %s\", req.ip, req.originalUrl);\r\n        return;\r\n    }\r\n    res.locals.permissions = permissions;\r\n    next();\r\n};\r\n\r\nexport const validator = constraints => (req, res, next) => {\r\n    const errors = validate(req.body, constraints);\r\n    if (errors) {\r\n        res.status(400);\r\n        return res.json({ message: \"Validation failed\", errors });\r\n    }\r\n    next();\r\n};\r\n\r\nexport const unauthorized = () => {\r\n    const debug = createDebug(\"middleware:unauthorized\");\r\n    return (req, res, next) => {\r\n        if (res.locals.user) return next();\r\n        debug(\"Unauthorized access from %s to %s\", req.ip, req.originalUrl);\r\n        res.status(401);\r\n        res.json({ message: \"Unathorized\" });\r\n    };\r\n};"]}