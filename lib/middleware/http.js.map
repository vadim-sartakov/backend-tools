{"version":3,"sources":["../../src/middleware/http.js"],"names":["notFound","req","res","loggerCallback","ip","originalUrl","status","send","message","internalError","err","next"],"mappings":";;;;;AAAO,IAAMA,8BAAW,SAAXA,QAAW;AAAA,WAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpDC,0BAAkBA,eAAe,sCAAf,EAAuDF,IAAIG,EAA3D,EAA+DH,IAAII,WAAnE,CAAlB;AACAH,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,WAAX,EAArB;AACH,KAHuB;AAAA,CAAjB;;AAKA,IAAMC,wCAAgB,SAAhBA,aAAgB;AAAA,WAAkB,UAACC,GAAD,EAAMT,GAAN,EAAWC,GAAX,EAAgBS,IAAhB,EAAyB;AAAE;AACtER,0BAAkBA,eAAeO,GAAf,CAAlB;AACAR,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,uBAAX,EAArB;AACH,KAH4B;AAAA,CAAtB","file":"http.js","sourcesContent":["export const notFound = loggerCallback => (req, res) => {\r\n    loggerCallback && loggerCallback(\"%s requested non-existed resource %s\", req.ip, req.originalUrl);\r\n    res.status(404).send({ message: \"Not found\" });\r\n};\r\n\r\nexport const internalError = loggerCallback => (err, req, res, next) => { // eslint-disable-line no-unused-vars\r\n    loggerCallback && loggerCallback(err);\r\n    res.status(500).send({ message: \"Internal server error\"});\r\n};"]}