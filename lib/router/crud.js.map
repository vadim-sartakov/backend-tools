{"version":3,"sources":["../../src/router/crud.js"],"names":["defaultOptions","defaultPageSize","createMiddlewareChain","createMiddleware","Model","crudOptions","securitySchema","validationSchema","crudMiddleware","chain","push","crudRouter","options","router","rootRouter","route","disableGetAll","get","createGetAll","disableAddOne","post","createAddOne","idRouter","disableGetOne","createGetOne","disableUpdateOne","put","createUpdateOne","disableDeleteOne","delete","createDeleteOne","req","res","permissions","locals","query","page","size","filter","sort","getAll","result","count","undefined","totalCount","lastPage","Math","max","ceil","prev","nextPage","min","link","LinkHeader","set","uri","querystring","stringify","rel","toString","json","getLocation","id","addOne","body","instance","_id","getOne","status","location","next","params","returnInstanceOrContinue","updateOne","deleteOne"],"mappings":"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","file":"crud.js","sourcesContent":["import { Router } from \"express\";\r\nimport querystring from \"querystring\";\r\nimport LinkHeader from \"http-link-header\";\r\nimport { getCurrentUrl, asyncMiddleware } from \"../utils/http\";\r\nimport { security, validator } from \"../middleware\";\r\n\r\nconst defaultOptions = {\r\n    defaultPageSize: 20\r\n};\r\n\r\nconst createMiddlewareChain = (createMiddleware, Model, crudOptions, securitySchema, validationSchema) => {\r\n    const crudMiddleware = createMiddleware(Model, crudOptions);\r\n    const chain = [];\r\n    if (securitySchema) chain.push(security(securitySchema));\r\n    if (validationSchema) chain.push(validator(validationSchema));\r\n    chain.push(crudMiddleware);\r\n    return chain;\r\n};\r\n\r\nconst crudRouter = (Model, options) => {\r\n    options = { ...defaultOptions, ...options };\r\n    const router = Router();\r\n    const rootRouter = router.route(\"/\");\r\n    const { securitySchema, validationSchema, ...crudOptions } = options;\r\n    !options.disableGetAll && rootRouter.get(createMiddlewareChain(createGetAll, Model, crudOptions, securitySchema));\r\n    !options.disableAddOne && rootRouter.post(createMiddlewareChain(createAddOne, Model, crudOptions, securitySchema, validationSchema));\r\n    const idRouter = router.route(\"/:id\");\r\n    !options.disableGetOne && idRouter.get(createMiddlewareChain(createGetOne, Model, crudOptions, securitySchema));\r\n    !options.disableUpdateOne && idRouter.put(createMiddlewareChain(createUpdateOne, Model, crudOptions, securitySchema, validationSchema));\r\n    !options.disableDeleteOne && idRouter.delete(createMiddlewareChain(createDeleteOne, Model, crudOptions, securitySchema));\r\n    return router;\r\n};\r\n\r\nconst createGetAll = (Model, options) => asyncMiddleware(async (req, res) => {\r\n\r\n    const { defaultPageSize } = options;\r\n    const { permissions } = res.locals;\r\n\r\n    let { page, size, filter, sort } = req.query;\r\n    // Converting to number by multiplying by 1\r\n    page = (page && page * 1) || 0;\r\n    size = (size && size * 1) || defaultPageSize;\r\n\r\n    const result = await Model.getAll({ page, size, filter, sort }, permissions);\r\n    let totalCount = await Model.count(filter, undefined);\r\n    \r\n    const lastPage = Math.max(Math.ceil(totalCount / size) - 1, 0);\r\n    const prev = Math.max(page - 1, 0);\r\n    const nextPage = Math.min(page + 1, totalCount, lastPage);\r\n\r\n    const link = new LinkHeader();\r\n    link.set({ uri: `${getCurrentUrl(req)}?${querystring.stringify({ page: 0, size })}`, rel: \"first\" }); \r\n    page > 0 && link.set({ uri: `${getCurrentUrl(req)}?${querystring.stringify({ page: prev, size })}`, rel: \"previous\" });\r\n    page < lastPage && link.set({ uri: `${getCurrentUrl(req)}?${querystring.stringify({ page: nextPage, size })}`, rel: \"next\" });\r\n    link.set({ uri: `${getCurrentUrl(req)}?${querystring.stringify({ page: lastPage, size })}`, rel: \"last\" });\r\n\r\n    res.set(\"X-Total-Count\", totalCount);\r\n    res.set(\"Link\", link.toString());\r\n    res.json(result);\r\n\r\n});\r\n\r\nconst getLocation = (req, id) => `${getCurrentUrl(req)}/${id}`;\r\n\r\nconst createAddOne = Model => asyncMiddleware(async (req, res) => {\r\n    const { permissions } = res.locals;\r\n    let instance = await Model.addOne(req.body, permissions);\r\n    const id = instance._id || instance.id;\r\n    instance = await Model.getOne({ id }, permissions);\r\n    res.status(201).location(getLocation(req, instance._id || instance.id)).json(instance);\r\n});\r\n\r\nconst createGetOne = Model => asyncMiddleware(async (req, res, next) => {\r\n    const { permissions } = res.locals;\r\n    let instance = await Model.getOne({ id: req.params.id }, permissions);\r\n    instance ? res.json(instance) : next();\r\n});\r\n\r\nconst returnInstanceOrContinue = async (Model, instance, req, res, next) => {\r\n    if (instance) {\r\n        instance = await Model.getOne({ id: req.params.id }, res.locals.permissions);\r\n        res.json(instance);\r\n    } else {\r\n        next();\r\n    }\r\n};\r\n\r\nconst createUpdateOne = Model => asyncMiddleware(async (req, res, next) => {\r\n    const { permissions } = res.locals;\r\n    let instance = await Model.updateOne({ id: req.params.id }, req.body, permissions);\r\n    await returnInstanceOrContinue(Model, instance, req, res, next);\r\n});\r\n\r\nconst createDeleteOne = Model => asyncMiddleware(async (req, res, next) => {\r\n    const { permissions } = res.locals;\r\n    let instance = await Model.deleteOne({ id: req.params.id }, permissions);\r\n    await returnInstanceOrContinue(Model, instance, req, res, next);\r\n});\r\n\r\nexport default crudRouter;"]}