{"version":3,"sources":["../../src/router/crud.js"],"names":["defaultOptions","idProperty","returnValue","getAll","defaultPageSize","addOne","getOne","updateOne","deleteOne","defaultPermissions","create","read","update","delete","CrudRouter","crudModel","options","_","merge","router","Router","rootRouter","route","disable","get","createChain","post","idRouter","put","middleware","chain","securityModifiers","securitySchema","push","security","validationSchema","some","modifier","mergeFilters","filters","resultFilters","filter","Boolean","item","length","$and","Model","req","res","defaultProjection","permissions","locals","query","page","size","queryFilter","sort","search","JSON","parse","queryOptions","projection","result","count","totalCount","lastPage","Math","max","ceil","prev","nextPage","min","link","LinkHeader","currentUrl","set","uri","querystring","stringify","rel","toString","json","getLocation","id","payload","cloneDeep","body","instance","status","location","secureGetOne","end","next","params","originInstance","valueToDelete"],"mappings":"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","file":"crud.js","sourcesContent":["import { Router } from \"express\";\r\nimport querystring from \"querystring\";\r\nimport _ from \"lodash\";\r\nimport LinkHeader from \"http-link-header\";\r\nimport { filterObject } from \"common-tools\";\r\nimport { getCurrentUrl, asyncMiddleware } from \"../utils\";\r\nimport { security, validator } from \"../middleware\";\r\n\r\nconst defaultOptions = {\r\n  idProperty: '_id',\r\n  returnValue: false,\r\n  getAll: {\r\n    defaultPageSize: 20\r\n  },\r\n  addOne: {},\r\n  getOne: {},\r\n  updateOne: {},\r\n  deleteOne: {}\r\n};\r\n\r\nconst defaultPermissions = {\r\n  create: {},\r\n  read: {},\r\n  update: {},\r\n  delete: {}\r\n};\r\n\r\nclass CrudRouter {\r\n  \r\n  constructor(crudModel, options) {\r\n    this.crudModel = crudModel;\r\n    this.options = _.merge({}, defaultOptions, options);\r\n    this.router = new Router();\r\n\r\n    this.rootRouter = this.router.route(\"/\");\r\n    !this.options.getAll.disable && this.rootRouter.get(this.createChain(getAll, \"read\"));\r\n    !this.options.addOne.disable && this.rootRouter.post(this.createChain(addOne, \"read\", \"create\"));\r\n\r\n    this.idRouter = this.router.route(\"/:id\");\r\n    !this.options.getOne.disable && this.idRouter.get(this.createChain(getOne, \"read\"));\r\n    !this.options.updateOne.disable && this.idRouter.put(this.createChain(updateOne, \"read\", \"update\"));\r\n    !this.options.deleteOne.disable && this.idRouter.delete(this.createChain(deleteOne, \"read\", \"delete\"));\r\n  }\r\n\r\n  createChain(middleware, ...securityModifiers) {\r\n    const chain = [];\r\n    this.options.securitySchema && chain.push(security(this.options.securitySchema, ...securityModifiers));\r\n    this.options.validationSchema && \r\n        securityModifiers.some(modifier => modifier === \"create\" || modifier === \"update\") &&\r\n        chain.push(validator(this.options.validationSchema));\r\n    chain.push(middleware(this.crudModel, this.options));\r\n    return chain;\r\n  }\r\n\r\n}\r\n\r\nconst mergeFilters = (...filters) => {\r\n  const resultFilters = filters.filter(item => Boolean(item));\r\n  if (!resultFilters.length) return;\r\n  return resultFilters.length === 1 ? resultFilters[0] : { $and: resultFilters };\r\n};\r\n\r\nconst getAll = (Model, options) => asyncMiddleware(async (req, res) => {\r\n\r\n  const { defaultPageSize, defaultProjection } = options.getAll;\r\n  const permissions = _.merge({}, defaultPermissions, res.locals.permissions);\r\n\r\n  let { page, size, filter: queryFilter, sort, search } = req.query;\r\n\r\n  // 'supertest' passes objects here, but real http request will have strings\r\n  if (filter && typeof (filter) === \"string\") queryFilter = JSON.parse(queryFilter);\r\n  if (sort && typeof (sort) === \"string\") sort = JSON.parse(sort);\r\n  \r\n  // Converting to number by multiplying by 1\r\n  page = (page && page * 1) || 0;\r\n  size = (size && size * 1) || defaultPageSize;\r\n\r\n  const queryOptions = { page, size };\r\n\r\n  const filter = mergeFilters(permissions.read.filter, queryFilter);\r\n  const projection = permissions.read.projection || defaultProjection;\r\n\r\n  if (filter) queryOptions.filter = filter;\r\n  if (projection) queryOptions.projection = projection;\r\n  if (sort) queryOptions.sort = sort;\r\n  if (search) queryOptions.search = search;\r\n\r\n  const result = await Model.getAll(queryOptions);\r\n  let totalCount = await Model.count(filter);\r\n\r\n  const lastPage = Math.max(Math.ceil(totalCount / size) - 1, 0);\r\n  const prev = Math.max(page - 1, 0);\r\n  const nextPage = Math.min(page + 1, totalCount, lastPage);\r\n\r\n  const link = new LinkHeader();\r\n  const currentUrl = getCurrentUrl(req);\r\n  link.set({ uri: `${currentUrl}?${querystring.stringify({ page: 0, size })}`, rel: \"first\" });\r\n  page > 0 && link.set({ uri: `${currentUrl}?${querystring.stringify({ page: prev, size })}`, rel: \"previous\" });\r\n  page < lastPage && link.set({ uri: `${currentUrl}?${querystring.stringify({ page: nextPage, size })}`, rel: \"next\" });\r\n  link.set({ uri: `${currentUrl}?${querystring.stringify({ page: lastPage, size })}`, rel: \"last\" });\r\n\r\n  res.set(\"X-Total-Count\", totalCount);\r\n  res.set(\"Link\", link.toString());\r\n  res.json(result);\r\n\r\n});\r\n\r\nconst getLocation = (req, id) => `${getCurrentUrl(req)}/${id}`;\r\n\r\nconst addOne = (Model, options) => asyncMiddleware(async (req, res) => {\r\n\r\n  const { returnValue } = options;\r\n  const permissions = _.merge({}, defaultPermissions, res.locals.permissions);\r\n\r\n  let payload = _.cloneDeep(req.body);\r\n  if (permissions.create.projection) payload = filterObject(payload, permissions.create.projection);\r\n\r\n  let instance = await Model.addOne(payload);\r\n  const id = instance[options.idProperty];\r\n  res.status(201);\r\n  res.location(getLocation(req, id));\r\n\r\n  if (returnValue) {\r\n    instance = await secureGetOne(Model, options, id, permissions);\r\n    res.json(instance);\r\n  } else {\r\n    res.end();\r\n  }\r\n\r\n});\r\n\r\nconst getOne = (Model, options) => asyncMiddleware(async (req, res, next) => {\r\n  const permissions = _.merge({}, defaultPermissions, res.locals.permissions);\r\n  let instance = await secureGetOne(Model, options, req.params.id, permissions);\r\n  instance ? res.json(instance) : next();\r\n});\r\n\r\nconst secureGetOne = async (Model, options, id, permissions) => {\r\n  const { defaultProjection } = options.getOne;\r\n  const projection = permissions.read.projection || defaultProjection;\r\n  const filter = mergeFilters({ [options.idProperty]: id }, permissions.read.filter);\r\n  return Model.getOne(filter, projection);\r\n};\r\n\r\nconst updateOne = (Model, options) => asyncMiddleware(async (req, res, next) => {\r\n\r\n  const { returnValue } = options;\r\n  const permissions = _.merge({}, defaultPermissions, res.locals.permissions);\r\n  let payload = _.cloneDeep(req.body);\r\n\r\n  if (permissions.update.projection) {\r\n    const originInstance = await secureGetOne(Model, options, req.params.id, permissions);\r\n    payload = filterObject(payload, permissions.update.projection, originInstance);\r\n  }\r\n  const filter = mergeFilters({ [options.idProperty]: req.params.id }, permissions.read.filter);\r\n\r\n  const result = await Model.updateOne(filter, payload);\r\n  if (!result) return next();\r\n\r\n  if (returnValue) {\r\n    const instance = await secureGetOne(Model, options, req.params.id, permissions);\r\n    res.json(instance);\r\n  } else {\r\n    res.end();\r\n  }\r\n\r\n});\r\n\r\nconst deleteOne = (Model, options) => asyncMiddleware(async (req, res, next) => {\r\n\r\n  const { returnValue } = options;\r\n  const permissions = _.merge({}, defaultPermissions, res.locals.permissions);\r\n  let valueToDelete;\r\n  if (returnValue) valueToDelete = await secureGetOne(Model, options, req.params.id, permissions);\r\n\r\n  const filter = mergeFilters({ [options.idProperty]: req.params.id }, permissions.read.filter);\r\n\r\n  const result = await Model.deleteOne(filter);\r\n  if (!result) return next();\r\n\r\n  if (returnValue) {\r\n    res.json(valueToDelete);\r\n  } else {\r\n    res.status(204);\r\n    res.end();\r\n  }\r\n\r\n});\r\n\r\nexport default CrudRouter;"]}