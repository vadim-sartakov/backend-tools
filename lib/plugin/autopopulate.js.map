{"version":3,"sources":["../../src/plugin/autopopulate.js"],"names":["autopopulateFunction","opts","model","mongoose","schema","options","populateProjection","result","maxDepth","select","_fields","selectFieldValue","path","exclusiveSelect","Object","keys","autopopulate","schemaType","Array","isArray","type","ref","name"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,uBAAuB,SAAvBA,oBAAuB,CAASC,IAAT,EAAe;;AAExC,QAAMC,QAAQC,mBAASD,KAAT,CAAeD,KAAKC,KAApB,CAAd;;AAFwC,eAGTA,SAASA,MAAME,MAAN,CAAaC,OAHb;AAAA,QAGhCC,kBAHgC,QAGhCA,kBAHgC;;AAKxC,QAAMC,SAAS,EAAEC,UAAU,CAAZ,EAAf;AACA,QAAIF,kBAAJ,EAAwBC,OAAOE,MAAP,GAAgBH,kBAAhB;AACxB,QAAI,CAAC,KAAKI,OAAV,EAAmB,OAAOH,MAAP;;AAEnB,QAAMI,mBAAmB,KAAKD,OAAL,CAAaT,KAAKW,IAAlB,KAA2B,CAApD;AACA,QAAMC,kBAAkB,KAAKH,OAAL,CAAaI,OAAOC,IAAP,CAAY,KAAKL,OAAjB,EAA0B,CAA1B,CAAb,MAA+C,CAAvE;;AAEA,QAAKG,mBAAmBF,gBAApB,IAA0C,CAACE,eAAD,IAAoB,CAACF,gBAAnE,EAAsF,OAAO,KAAP;;AAEtF,WAAOJ,MAAP;AAEH,CAhBD;;AAkBA,IAAMS,eAAe,SAAfA,YAAe,CAASZ,MAAT,EAAiB;;AAElC,kCAAkBA,MAAlB,EAA0B,UAACQ,IAAD,EAAOK,UAAP,EAAsB;AAC5C,YAAI,CAACA,WAAWZ,OAAhB,EAAyB;AADmB,YAEtCA,OAFsC,GAE1BY,UAF0B,CAEtCZ,OAFsC;;AAG5CA,kBAAUa,MAAMC,OAAN,CAAcd,QAAQe,IAAtB,IAA8Bf,QAAQe,IAAR,CAAa,CAAb,CAA9B,GAAgDf,OAA1D;AACA,YAAIA,QAAQgB,GAAR,IAAehB,QAAQe,IAAR,CAAaE,IAAb,KAAsB,UAAzC,EAAqD;AACjDjB,oBAAQW,YAAR,GAAuBhB,oBAAvB;AACH;AACJ,KAPD;;AASA,wCAAmBI,MAAnB;AAEH,CAbD;;kBAeeY,Y","file":"autopopulate.js","sourcesContent":["import mongoose from \"mongoose\";\r\nimport autopopulatePlugin from \"mongoose-autopopulate\";\r\nimport { eachPathRecursive } from \"./utils\";\r\n\r\nconst autopopulateFunction = function(opts) {\r\n\r\n    const model = mongoose.model(opts.model);\r\n    const { populateProjection } = model && model.schema.options;\r\n\r\n    const result = { maxDepth: 1 };\r\n    if (populateProjection) result.select = populateProjection;\r\n    if (!this._fields) return result; \r\n    \r\n    const selectFieldValue = this._fields[opts.path] || 0;\r\n    const exclusiveSelect = this._fields[Object.keys(this._fields)[0]] === 0;\r\n\r\n    if ((exclusiveSelect && selectFieldValue) || (!exclusiveSelect && !selectFieldValue)) return false;\r\n\r\n    return result;\r\n\r\n};\r\n\r\nconst autopopulate = function(schema) {\r\n\r\n    eachPathRecursive(schema, (path, schemaType) => {\r\n        if (!schemaType.options) return;\r\n        let { options } = schemaType;\r\n        options = Array.isArray(options.type) ? options.type[0] : options;\r\n        if (options.ref && options.type.name === \"ObjectId\") {\r\n            options.autopopulate = autopopulateFunction;\r\n        }\r\n    });\r\n\r\n    autopopulatePlugin(schema);\r\n\r\n};\r\n\r\nexport default autopopulate;"]}